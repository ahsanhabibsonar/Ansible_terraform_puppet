#install_puppet_server.yml
---
- hosts: dynamic_host
  gather_facts: true
  vars:
    ansible_ssh_common_args: " -o StrictHostKeyChecking=no"

  become: true
  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install terraform using terraform.sh script
      ansible.builtin.script: /home/ubuntu/acit4430-infra/terraform.sh

    - name: Install ansible and openstack
      ansible.builtin.apt:
        pkg:
          - ansible
          - python3-dev
          - python3-pip
          - python3-openstackclient
        state: latest

    - name: Touch ansible.cfg in home folder 
      ansible.builtin.file:
        path: /home/ubuntu/.ansible.cfg
        state: touch

    - name: Touch ansible.log in /var/log folder 
      ansible.builtin.file:
        path: /var/log/ansible.log
        state: touch
        mode: '0666'
      become: true

    - name: Set inventory configuration in ansible.cfg
      ansible.builtin.blockinfile:
        path: /home/ubuntu/.ansible.cfg
        block: |
          [defaults]
          # The default inventory file location
          inventory = /home/ubuntu/.ansible/hosts
          # Where to store the logs
          log_path = /var/log/ansible.log
          # The default module path for ansible modules
          library = /usr/share/ansible/plugins/modules
          # Whether or not to check the syntax of the playbooks
          syntax_check = True
          # Default SSH timeout
          timeout = 30
          # The default user to use for SSH
          #remote_user = ubuntu
          # Disable host key checking (useful for dynamic environments)
          host_key_checking = False
          # Enable fact gathering
          gathering = smart
        marker: "# {mark} ANSIBLE MANAGED BLOCK"


    - name: Create openstack directory in the new VM
      ansible.builtin.file:
        path: /home/ubuntu/.config/openstack
        state: directory
        owner: ubuntu
        group: ubuntu

    - name: Copy clouds.yml to new vm
      ansible.builtin.copy:
        src: /home/ubuntu/.config/openstack/clouds.yaml
        dest: /home/ubuntu/.config/openstack/

    - name: Set environment variable in the .bashrc file
      ansible.builtin.lineinfile:
        path: /home/ubuntu/.bashrc
        line: export OS_CLOUD=openstack_cred1
        owner: ubuntu
        group: ubuntu
        mode: "0644"

    - name: Download Puppet binary
      ansible.builtin.get_url:
        url: https://apt.puppet.com/puppet8-release-jammy.deb
        dest: /tmp/puppet8-release-jammy.deb

    - name: Install puppet8-release-jammy.deb
      ansible.builtin.apt:
        deb: /tmp/puppet8-release-jammy.deb

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install puppet server and agent
      ansible.builtin.apt:
        pkg:
          - puppetserver
          - puppet-agent
        state: present

    - name: Add puppetmaster to /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ ansible_default_ipv4.address }}  puppetmaster.openstacklocal puppetmaster"
      when: ansible_default_ipv4.address is defined
      ignore_errors: true

    - name: Set puppetmaster configuration in puppet.conf
      ansible.builtin.blockinfile:
        path: /etc/puppetlabs/puppet/puppet.conf
        block: |
          [main]
          certname = puppetmaster.openstacklocal
          server = puppetmaster.openstacklocal
          environment = production
          runinterval = 30m
        marker: "# {mark} ANSIBLE MANAGED BLOCK"

    - name: Add puppetmaster dns to /etc/puppetlabs/puppet/puppet.conf
      ansible.builtin.lineinfile:
        path: /etc/puppetlabs/puppet/puppet.conf
        line: dns_alt_names=puppetmaster.openstacklocal,puppetmaster

    - name: Setting up ca server in puppet master
      ansible.builtin.shell:
        cmd: /opt/puppetlabs/bin/puppetserver ca setup

    - name: Ensure puppet-server is running
      ansible.builtin.service:
        name: puppetserver
        state: started

    - name: Wait for Puppet service to settle
      ansible.builtin.pause:
        seconds: 5

    - name: Ensure puppet-agent is running
      ansible.builtin.service:
        name: puppet
        state: started
          
    - name: Create Ansible_terraform_puppet directory
      ansible.builtin.file:
        path: /home/ubuntu/Ansible_terraform_puppet
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: "0755"

    - name: Download acit4430 git repository
      ansible.builtin.git:
        repo: https://github.com/ahsanhabibsonar/Ansible_terraform_puppet.git
        dest: /home/ubuntu/Ansible_terraform_puppet

    - name: Copy site.pp to /etc/puppetlabs/code/environments/production/manifests/
      ansible.builtin.copy:
        src: /home/ubuntu/Ansible_terraform_puppet/site.pp
        dest: /etc/puppetlabs/code/environments/production/manifests/
        remote_src: true
      become: true

    - name: Delete existing SSH key if it exists
      openstack.cloud.keypair:
        cloud: "{{ lookup('env', 'OS_CLOUD') }}"  # Pull from environment variable
        state: absent
        name: my_key
      ignore_errors: true

    - name: Generate SSH key
      community.crypto.openssh_keypair:
        path: /home/ubuntu/.ssh/id_ed25519
        type: ed25519
        state: present

    - name: Upload the SSH key to OpenStack
      openstack.cloud.keypair:
        #cloud: openstack_cred1
        cloud: "{{ lookup('env', 'OS_CLOUD') }}"  # Pull from environment variable
        state: present
        name: my_key
        public_key_file: /home/ubuntu/.ssh/id_ed25519.pub

    - name: Terrform creates agents VM inside puppet server
      ansible.builtin.include_tasks:
        file: /home/ubuntu/Ansible_terraform_puppet/cloud-deployment/openstack/ansible/tasks/create_multiple_vms.yml

##    - name: Set Ansible connection to local
##      ansible.builtin.set_fact:
##        ansible_connection: local
##
##    - name: Run Ansible within the dynamic host
##      ansible.builtin.command: ansible-playbook create_agent_vms.yml -e "server_ip={{ ansible_default_ipv4.address }}"
##      args:
##        chdir: /home/ubuntu/acit4430-infra/cloud-deployment/openstack/ansible
##      environment:
##        ANSIBLE_HOST_KEY_CHECKING: "False"
##      become: false
##
##    - name: Generate a new certificate at the agent
##      ansible.builtin.command: /opt/puppetlabs/bin/puppet agent --test
##      register: puppet_agent_result
##      retries: 3
##      delay: 5
##      until: puppet_agent_result.rc == 0
